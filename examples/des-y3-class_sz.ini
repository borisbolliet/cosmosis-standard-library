%include examples/des-y3.ini
[runtime]
sampler = polychord
# sampler = test

# run with:
# $ cosmosis examples/des-y3-class_sz.ini
# which probably needs:
# $ source /Users/boris/opt/miniconda3/bin/activate; conda activate /Users/boris/Work/CLASS-SZ/SO-SZ/env; source cosmosis-configure
export CC=clang CXX=clang++ FC=gfortran



[pipeline]
modules =  consistency  bbn_consistency
           class_sz  extrapolate
           fast_pt
           fits_nz  lens_photoz_width  lens_photoz_bias  source_photoz_bias
           IA  pk_to_cl_gg  pk_to_cl
           add_magnification  add_intrinsic
           2pt_shear 2pt_gal  2pt_gal_shear
           shear_m_bias   add_point_mass
           2pt_like  shear_ratio_like

values = examples/des-y3-class_sz-values.ini
priors = examples/des-y3-priors.ini

[test]
save_dir = output/des-y3-class_sz

[polychord]
polychord_outfile_root = y3_class_sz
live_points = 150
num_repeats = 15
tolerance = 0.5

[output]
filename = output/des-y3_class_sz.txt
format=text

[extrapolate]
file = boltzmann/extrapolate/extrapolate_power.py
power_spectra_names = matter_power_nl matter_power_lin
npoint = 10
kmax = 500.0

[class_sz]
file = boltzmann/class_sz/class_sz_interface.py
version = 2.0
lmax = 2850
debug = T
zmax = 3.0
# Note: fiducial kmax value is 100
kmax = 50.0
nk = 200
cmb = T
mpk = T
lensing = T
class_non_linear = halofit
use_class_sz_fast_mode = 1
ndim_redshifts = 10
